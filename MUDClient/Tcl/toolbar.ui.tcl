###########################################
# toolbar.ui.tcl
# Displays the tool bar and binds commands
# to clicks
# Iain Ollerenshaw 17/2/98
# Version History:
# Date	Who Comments
# 17/2/98	I0	Created
###########################################
# interface generated by SpecTcl version 1.1 from Oli's HD:SHProject:MUL Code:Client:Tcl:toolbar.ui
#	root	is the parent window for this user interface
# Create the toolbar
proc toolbar_ui {root args} {
    global images
    
    # this treats "." as a special case
    if {$root == "."} {
        set base ""
    } else {
        set base $root
    }
    
    set images "./images"
    frame $base.frame#1

    image create photo arrowb -file [file join "C:/MUD/MUDClient/Tcl/images/arrow.gif"]
    image create photo polyb -file [file join "C:/MUD/MUDClient/Tcl//images/poly.gif"]
    image create photo circleb -file [file join "C:/MUD/MUDClient/Tcl//images/circle.gif"]
    image create photo boxb -file [file join "C:/MUD/MUDClient/Tcl//images/box.gif"]
    image create photo lineb -file [file join "C:/MUD/MUDClient/Tcl//images/line.gif"]
    image create photo textb -file [file join "C:/MUD/MUDClient/Tcl//images/text.gif"]
    image create photo lockb -file [file join "C:/MUD/MUDClient/Tcl//images/lock.gif"]
    image create photo unlockb -file [file join "C:/MUD/MUDClient/Tcl//images/unlock.gif"]
    image create photo deleteb -file [file join "C:/MUD/MUDClient/Tcl//images/delete.gif"]
    image create photo shadeb -file [file join "C:/MUD/MUDClient/Tcl//images/shade.gif"]
    
    button $base.arrowButt \
    -command {set currObject 1; .tool.currObject configure -text  Select} \
    -image arrowb \
    -text Arrow

    button $base.polyButt \
    -command {set currObject 6; .tool.currObject configure -text Polygon} \
    -image polyb \
    -state disabled \
    -text Polygon

    button $base.circButt \
    -command {set currObject 3; .tool.currObject configure -text Circle} \
    -image circleb \
    -text Circle

    button $base.boxButt \
    -command {set currObject 2; .tool.currObject configure -text Box} \
    -image boxb \
    -text Box

    button $base.lineButt \
    -command {set currObject 4; .tool.currObject configure -text Line} \
    -image lineb \
    -text Line

    button $base.textButt \
    -command {set currObject 5; .tool.currObject configure -text Text} \
    -image textb \
    -text Text

    button $base.lockButt \
    -command {set currObject 7; .tool.currObject configure -text Lock} \
    -image unlockb \
    -text Lock
    
    button $base.unlockButt \
    -command {set currObject 8; .tool.currObject configure -text Commit} \
    -image lockb \
    -text Commit
    
    button $base.deleteButt \
    -command {set currObject 9; .tool.currObject configure -text Delete} \
    -image deleteb \
    -text Delete
    
    button $base.shadeButt \
    -command {set currObject 10; .tool.currObject configure -text Shade} \
    -image shadeb \
    -text Shade
    
    label $base.currObject \
    -text current
    
    # Geometry management
    grid $base.frame#1 -in $root -row 6 -column 1 -columnspan 2
    grid $base.arrowButt -in $root	-row 1 -column 1 -sticky nesw
    grid $base.boxButt -in $root -row 1 -column 2 -sticky nesw
    grid $base.circButt -in $root -row 2 -column 1 -sticky nesw
    grid $base.lineButt -in $root -row 2 -column 2 -sticky nesw
    grid $base.textButt -in $root -row 3 -column 1 -sticky nesw
    grid $base.polyButt -in $root -row 3 -column 2 -sticky nesw
    grid $base.unlockButt -in $root	-row 4 -column 1 -sticky nesw
    grid $base.lockButt -in $root -row 4 -column 2 -sticky nesw
    grid $base.deleteButt -in $root	-row 5 -column 1 -sticky nesw
    grid $base.shadeButt -in $root	-row 5 -column 2 -sticky nesw
    grid $base.currObject -in $base.frame#1	-row 1 -column 1 -sticky nesw

    # Resize behavior management
    grid rowconfigure $root 1 -weight 0 -minsize 30
    grid rowconfigure $root 2 -weight 0 -minsize 30
    grid rowconfigure $root 3 -weight 0 -minsize 30
    grid rowconfigure $root 4 -weight 0 -minsize 30
    grid rowconfigure $root 5 -weight 0 -minsize 30
    grid columnconfigure $root 1 -weight 0 -minsize 30
    grid columnconfigure $root 2 -weight 0 -minsize 30
    grid rowconfigure $base.frame#1 1 -weight 0 -minsize 30
    grid columnconfigure $base.frame#1 1 -weight 0 -minsize 85
    # additional interface code
    # end additional interface code
}

# Allow interface to be run "stand-alone" for testing
catch {
    if [info exists embed_args] {
        # we are running in the plugin
        toolbar_ui .
    } else {
        # we are running in stand-alone mode
        if {$argv0 == [info script]} {
            wm title . "Testing toolbar_ui"
            toolbar_ui .
        }
    }
}
